---
title: "Innlevering MSB205"
output:
  html_document:
    df_print: paged
  pdf_document: default
---


title: Innlevering MSB205
author: Maren Sognefest og Mona Lisa Jones
Affiliation: HVL
email: 152148@stud.hvl.no & xxxxxx@stud.hvl.no
bibliography: Mittbibliotek.bib
bib-humanities: true
nocite: 
lang: no-NB
fontsize: 12pt
linestretch: 1.5
output:
  html_notebook: default
  pdf_document: default
  word_document: default
  html_document:
    df_print: paged

csl: apa-no-ampersand

```{r}
#| label: setup
#| message: false
library(sf)
library(units)
library(Jmisc)
library(tidyverse)
library(lubridate)
library(sp)
library(spdep)
library(spatialreg)
library(spData)
library(huxtable)
library(knitr)
library(foreign)
```

# Oppgave 1 
```{r Oppgave 1}
kc_house_data <- read.csv("./Data/kc_house_data.csv")
```

```{r}
# skrevet om til litt mer tidyvelsk
kc_house_data <- kc_house_data  |> 
  mutate(
    date = ymd_hms(date),
    #nye variabler for date, month, year
    year = year(date),
    month = month(date),
    day = day(date)
    )  |>
  #sortere datasett basert på dato
  arrange(desc(date))  |>  
  #behold bare siste salg
  distinct(id, .keep_all = TRUE) 
```

```{r}
# Bruk st_as_sf() til å konvertere house data til et sf objekt 
# vha. long lat og sett til geografisk projeksjon, dvs EPSG:4326.
kc_house_data_sf <- st_as_sf(
  kc_house_data, 
  coords = c("long", "lat"), 
  crs = 4326
  ) 
```

```{r}
# endre projeksjon til EPSG:2926
kc_house_data_sf <- st_transform(kc_house_data_sf, 2926)
```


```{r Oppgave 1 - videre, cbd}
# Bruk koordinatene fra Seattles wikipedia-side (øvre høyre hjørne, 
# klikk linken så får dere koordinatene i desimalform) og sett 
# dette punktet som CBD for Seattle.
# 
# datasett med koordinatene. Ser ut til at st_sfc(st_point())
# er nødvendig
cbd <- st_sfc(st_point(c(-122.333056, 47.609722)), crs = 4326)

# til ESPG 2926
cbd_sf <- st_transform(cbd, 2926) 
```


```{r}
# DETTE SKJØNNER JEG IKKE. 
# KAN IKKE SE AT HAR NOEN HENSIKT. VURDER Å SLETTE
# JEG HAR SATT EVAL TIL FALSE SLIK AT DEN IKKE KJØRER
#| label: rydde datasett og få avstand CBD inn i originaldatasett
#| eval: false
kc_house_data_sf <- kc_house_data_sf  |> 
  select(
    -starts_with("geometry."), 
    -starts_with("avstand_til_cbd.."), 
    -starts_with("distance_cbd")
    )
```

```{r}
# Konverter dette punktet til EPSG:2926. Finn avstanden mellom dette punktet
# og samtlige hus i datasettet i luftlinje. Konverter avstandene til km 
# og legg dem i variabelen dest_CBD i kartet med husdata.
# 
# cbd_sf er definert ovenfor. Enklere å bare bruke dette i en mutate i en
# pipe med 

kc_house_data_sf <- kc_house_data_sf %>% 
  mutate(
    avstand_til_cbd = st_distance(rep(cbd_sf, nrow(.)), ., by_element = TRUE),
    avstand_til_cbd = set_units(avstand_til_cbd, km)
    )

# avstand_til_cbd <- st_distance(kc_house_data_sf, cbd_sf) #avstand til cbd i luftlinje
# avstand_til_cbd_km <- avstand_til_cbd * 0.0003048 #1 fot er lik 0.0003048 kilometer
# kc_house_data_sf$dest_CBD <- avstand_til_cbd_km #inn i datasett
```

```{r Oppgave 1 ferdig, må rydde}
rm(cbd, cbd_sf, kc_house_data) #fjerne unødvendige datasett
kc_house_data_oppg1 <- kc_house_data_sf #endre ferdig datasett til "kc_house_data_oppg1"
rm(kc_house_data_sf) #fjerne 
```


# Oppgave 2

```{r Laste inn shp-fil}
#Last ned WADOH Environmental Health Disparities Index Calculated for King County. 
file_path <- "Data/WADOH_Environmental_Health_Disparities_Index_Calculated_for_King_County___wadohehdindex_area.shp"
WADOH_King_County <- st_read(file_path) #Les inn .shp filen WADOH King County.
```

```{r Velge ut variabler}
#Plukk ut variablene angitt tidligere i oppgaven.
kc_wadoh_map <- WADOH_King_County %>% 
  select(
  GEO_ID_TRT,
  EHD_percen,#Environmental Health Index, weighted score many vars
  linguist_2,#Pop. age 5+ speaking English less than "very well"
  poverty_pe,#Percentage people living in poverty
  transporta,#% of income spent on transportation median family in tract
  unemploy_2,#percentage unemployed
  housing_pe,#% of households in group "Unaffordable Housing" (>30% inc.)
  traffic_pe,#% of pop. near heavy traffic roadways
  diesel,# nox consentration
  ozone,# ozone consentration
  PM25, # consentration of Particulate Matter in air
  toxic_rele, # Toxic release from factories
  hazardous_, # Hazardous Waste Treatment Storage and disposal Facilities
  lead_perce, # measure of Lead paint in houses
  superfund, # Proximity to contaminated sites on national list
  facilities, # Proximity to Risk Management Plan Facilities
  wastewater, # Proximity to wastewater facilities
  sen_pop_pe, # % pop. over 65
  socio_perc # score social economic determants, low best
  )
```

```{r}
#Transponer kartet til projeksjonen EPSG:2926
kc_wadoh_map <- st_transform(kc_wadoh_map, 2926)
WADOH_King_County <- st_transform(WADOH_King_County, 2926)
```

# "Data provided by permission of King County" må legges inn i fotnote!

```{r Legge inn datasett. Dette fikk jeg ikke lastet ned som dbf-fil}
acs_b19101_familyincome <- read.csv("./Data/acs_b19101_familyincome.csv")
```

```{r endre inntektsvariabler}
# Denne forstår jeg ikke
# endret eval til false
#| eval: false
acs_b19101_familyincome <- acs_b19101_familyincome %>%
  select(-starts_with("M")) %>% #fjerner M-variabler
  mutate(across(starts_with("E"), ~case_when(
    . <= 35000 ~ "low",
    . > 35000 & . <= 100000 ~ "mid",
    . > 100000 ~ "high"
  )))
```

KOM SÅ LANGT

Inntektsvariabelen. Finner ikke census-dataene så kan ikke lese inn .dbf filen

```{r}
#| eval: false
library(foreign)
kc_mean_fam_inc <- read.dbf("Msb205/Data/acs_b19101_familyincome.dbf", as.is = TRUE) %>% 
  select(GEOIDTRT, starts_with("E")) %>% 
  transmute(
    GEO_ID_TRT = GEOIDTRT,
    inc_fam_tot = E19101137,
    inc_fam_low = E19101138 + E19101139 + E19101140 + E19101141 + E19101142 + E19101143,
    inc_fam_med = E19101144 + E19101145 + E19101146 + E19101147 + E19101148 + E19101149,
    inc_fam_high =  E19101150 + E19101151 + E19101152 + E19101153,
    inc_fam_low_per = inc_fam_low/inc_fam_tot,
    inc_fam_med_per = inc_fam_med/inc_fam_tot,
    inc_fam_high_per = inc_fam_high/inc_fam_tot
    )
```



```{r Legge inn datasett etnisitet Dette fikk jeg heller ikke lastet ned som dbf-fil}
acs_b02001_race <- read.csv("./Data/acs_b02001_race.csv")
```

```{r endre etnisitet-variabler}
acs_b02001_race <- acs_b02001_race %>%
  select(-starts_with("M")) %>% #fjerner M-variabler
  mutate(
    total = E02001001,
    hvit_alene = E02001002,
    svart_alene = E02001003,
    asiatisk_alene = E02001005,
    andre_alene = E02001004 + E02001006 + E02001007,
    blandet = E02001008 + E02001009 + E02001010
  )
```

```{r Lage andel-variabler}
acs_b02001_race <- acs_b02001_race %>%
  mutate(
    andel_hvit_alene = hvit_alene / total * 100,
    andel_svart_alene = svart_alene / total * 100,
    andel_asiatisk_alene = asiatisk_alene / total * 100,
    andel_andre_alene = andre_alene / total * 100,
    andel_blandet = blandet / total * 100
  )
```

```{r Laste ned kart}
file_path2 <- "Data/Kart/tracts10.shp"
tracts10 <- st_read(file_path2) #Les inn .shp-filen.
```
```{r endre EPSG}
tracts10 <- st_transform(tracts10, 2926)
```

```{r inntekt inn i WADOH_K_C}
acs_b19101_familyincome$GEO_ID_TRT <- as.character(acs_b19101_familyincome$GEO_ID_TRT) #må være samme type

WADOH_King_County <- WADOH_King_County %>%
  left_join(acs_b19101_familyincome, by = c("GEO_ID_TRT", "TRACT_LBL"))
```

```{r etnisitet inn i WADOH_K_C}
acs_b02001_race$GEO_ID_TRT <- as.character(acs_b02001_race$GEO_ID_TRT) #til character
WADOH_King_County <- WADOH_King_County %>%
  left_join(acs_b02001_race, by = "GEO_ID_TRT", "TRACT_LBL")
```

```{r Legg census-tracts til?}
tracts10 <- tracts10 %>%
  st_join(WADOH_King_County, by = "GEO_ID_TRT") #Legg census-tract data til kartet
```

```{r Sjekk områdevariablene fra WADOH vha. summary for tracts10}
summary(tracts10)
```


```{r}
tracts10 <- tracts10
st_join(kc_house_data_oppg1, by = "GEO_ID_TRT")
```


Gjør en «spatial join» av husdata med tracts10

Sjekk områdevariablene fra WADOH vha. summary for tracts10

En observasjon fra tracts10 har bare NA for områdevariablene. Dropp denne.

Lag en faktor-variabel av år og måned ut fra Date, kall den year_month.

Lagre .gpkg filen for husdataene . (Sett opsjonen append=FALSE. Ellers får dere ikke lov til å overskrive filen.)



TROR DETTE ER FEIL, men ha d i tilfelle.

```{r}
common_keys <- intersect(names(tracts10), names(WADOH_King_County))
print(common_keys) #finne felles kolonnenavn
any(duplicated(WADOH_King_County$geometry))
any(duplicated(tracts10$geometry)) #sjekket alle duplikater slik... sikkert ikke den mest effektive måten.

tracts10 <- tracts10 %>%
  st_join(WADOH_King_County, by = c("GEO_ID_TRT", "FEATURE_ID", "TRACT_STR", "TRACT_INT", "TRACT_FLT", "TRACT_DEL", "TRTLABEL_F", "TRTLABEL_C", "TRTLABEL_T", "LEVEL_3", "TRACT_AREA", "TRACT_PERI", "LOGRECNO", "geometry"))
```



